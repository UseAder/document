*Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。
Node.js 的包管理器 npm，成为世界上最大的开放源代码的生态系统

函数的 prototype 属性是在函数作为构造器使用的时候，作为其构造对象的原型。
普通函数声明.函数表达式(匿名函数・自执行函数・事件处理函数）・构造函数

事件 文档或浏览器发生交互的瞬间（焦点事件・鼠标事件	・键盘事件）

*prototype是目前应用最为广泛的Ajax开发框架，其的特点是功能实用而且尺寸较小，非常适合在中小型的Web应用中使用.Prototype框架最大的部分就是对DOM的扩展。

*jQuery是一个快速，小巧，功能丰富的JavaScript库。它使诸如HTML文档遍历和操纵，事件处理，动画和Ajax等事情变得简单得多，而且易于使用的API可以在多种浏览器中使用。结合多功能性和可扩展性，jQuery改变了数百万人写JavaScript的方式。

*Zepto是一个轻量级的针对现代高级浏览器的JavaScript库，?它与jquery有着类似的api

*Swiper是纯javascript打造的滑动特效插件，面向手机、平板电脑等移动终端,能实现触屏焦点图、触屏Tab切换、触屏多图切换等常用效果。

*Webpack可以看做是模块打包机：它做的事情是，分析你的项目结构，
找到JavaScript模块(commonJs)以及其它的一些浏览器不能直接运行的拓展语言（Scss，jsx,vue等），
并将其打包为合适的格式以供浏览器使用。

*AJAX即“Asynchronous Javascript And XML”（异步JavaScript和XML），是指一种创建交互式网页应用的网页开发技术。
通过在后端与服务器进行少量数据交换，AJAX 可以使网页实现异步更新.可以在不重新加载整个网页的情况*下，对网页的某部分进行更新。
一部分以前由服务器负担的工作转移到客户端，减轻服务器和带宽的负担，无刷新更新页面，不需要等待

*同源策略：阻止从一个域上加载的脚本获取或操作另一个域上的文档属性
	1.端口不同，域名不同，协议不同  出现跨域
	
*promise：异步编程的一种解决方案。取代callback和event
promise构造函数：异步编程的一种解决方案。比传统的回调函数更合理，更强大。
创建promise实例对象,构造函数的参数又是一个函数对象，函数对象里面又有两个参数，一个	代表成功的回调，一个是失败的回调
	promise状态：pending(进行中) resolve(成功，已解决)  reject(失败，未解决)

*JSONP(JSON with Padding)是一个非官方的协议，通过javascript callback的形式	实现跨域访问。
由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源，为了实现跨域请求
，可以通过script标签实现跨域请求，然后在服务端输出JSON	数据并执行回调函数，从而解决了跨域的数据请求

*在JavaScript中，回调函数具体的定义为：函数A作为参数(函数引用)传递到另一个函数B中,并且这个函数B执行函数A。我们就说函数A叫做回调函数


TCP（Transmission Control Protocol 传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议，由IETF的RFC 793定义

PHP（外文名:PHP: Hypertext Preprocessor，中文名：“超文本预处理器”） 是一种免费开源的服务器端脚本程序。利于学习，使用广泛，主要适用于Web开发领域。可以运行在 unix（尤尼斯）.linux.windows下具有极其有效的文本处理特性，

JavaScript是一种轻量级、解释型的Web开发语言

变量的命名规则： 数字、字母、下划线、$符号组成，其中数字不能做开头

javascript组成:ECMAscript(基本语法es3/es5/es6) +  BOM(浏览器)   +  DOM(文档)

Swiper(Swiper master)是目前应用较广泛的移动端网页触摸内容滑动js插件。









