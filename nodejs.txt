
node.js使用了一个事件驱动・非堵塞式I/O的模型
版本 * ~ ^

package.json是记录一些用户和软件信息的文件  记录你安装的所有模块
package.json的另一个作用执行脚本

npm install -g cnpm --registry=https://registry.npm.taobao.org  全局安装cnpm
npm init 配置package.json
npm install --save-dev MD5 局部安装
npm install -g yarn  全局安装yarn
yarn add Async 安装异步处理Async
npm install -g node-dev  服务器自动重启
node-dev index.js运行 
*安装和创建基于Express的项目
 ・ npm install -g express
 ・ npm install -g express-generator
	#创建一个工程
	・express -e xxx（ejs模板）
	・cd xxx
	・npm install（下载需要的包）
	・npm start（运行脚本）		



解决yarn全局安装模块后但仍提示无法找到命令的问题 
控制面板   高级系统设置  环境变量 系统变量（在pathixa新连接yarn地址） 
 
cmd查看ip地址 ipconfig

API文档

wekpack


nodejs.cn/api
找接口的方式打开Network 找到XHR过滤


var http = require("http");//加载引入nodejs 提供的http模块。创建服务器
var url =require("url")//加载引入nodejs 提供的url模块。对于地址字符串进行处理
var querystring=require("querystring")//nodejs模块  转换对象
var events=require("events");//模块事件监听var EventEmitter=new events.EventEmitter();//new一个构造函数创建对象



//url 是一个对象 它导出纯在一个parse方法  程序通过对象.方法调用  对字符串进行简单处理

项目前后端架构
1.前后端分离
2.后端渲染模板

npm install -g node-dev安装后检测文件是否修改  已修改帮你自动重启服务器


1. 自己写一个路由框架（按照上午的流程）
2. 全局安装express， express-generator
3. 在express 项目基础上，创建新路由，熟悉，get post cookie 设置与获取 以及 ejs 模板的使用流程

no such file or directory  路径错误

npm install -g express(web应用开发框架）
npm install -g express-generator(创建一个hello world的应用程序

